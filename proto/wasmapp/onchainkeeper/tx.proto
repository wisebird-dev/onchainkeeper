syntax = "proto3";
package wasmapp.onchainkeeper;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "wasmapp/onchainkeeper/params.proto";

option go_package = "wasmapp/x/onchainkeeper/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc RegisterCronContract(MsgRegisterCronContract) returns (MsgRegisterCronContractResponse);
  rpc UnregisterCronContract(MsgUnregisterCronContract) returns (MsgUnregisterCronContractResponse);
  rpc ActivateCronContract(MsgActivateCronContract) returns (MsgActivateCronContractResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "wasmapp/x/onchainkeeper/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgRegisterCronContract {
  option (cosmos.msg.v1.signer) = "sender_address";

  string sender_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string contract_address = 2;
}

message MsgRegisterCronContractResponse {}

message MsgUnregisterCronContract {
  option (cosmos.msg.v1.signer) = "sender_address";

  string sender_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string contract_address = 2;
}

message MsgUnregisterCronContractResponse {}

message MsgActivateCronContract {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the admin address specified in the module's parameters.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string contract_address = 2;
}

message MsgActivateCronContractResponse {}

